92 MPSTAT~
Syntax: {Cmpstat{x <{Ymobile{x>

This command will list some basic info about the mobile and the mob
program associated with that mobile.
~

92 ROOM AREA BUILDING~
{CImmortal{x additions to the ROOM helpfile:

{PPersonal rooms{x, when placed {Woutside{x of a clanhall, should be discussed
{PAHEAD{x of time with the head {Cbuilder{x, or an {PI{Ym{Gp{Bl{Ve{Pm{Ye{Gn{Bt{Vo{Pr{x.  There are areas
in the mud that cannot have personal rooms, for example around Annabus,
the Flaming Sword, or shops.
~

92 EXITS~
Syntax: {Cexits in{x

This is an imm-only command that tells you which rooms exit into your
current location and which portals lead there.  This is helpful with
rooms that are not connected with two-way exits.
~

92 ROOMEXITS~
Syntax: {Croomexits{x

This command shows all exits into and out of the room that you are in,
and the vnums of the room that connect.  <> denote two way exits, while
a > or a < denotes a one way exit.    
~

92 EXITLIST~
Syntax: {Cexitlist{x

Lists information about exits to and from your current area.

Example:
 3370 The School of Skills       <> 8543 The Gathering             (Playpen )
The < means that 8543 connects to 3370
The > means that 3370 connects to 8543
(Playpen ) is the connecting area's name
3370 The School of Skills is a vnum/room in your current area
8543 The Gathering is a vnum/room in a connecting area

{YSEE ALSO:{x 'exits in' and 'roomexit'
~

92 SEDIT~
Syntax:  {Csedit delete         {W<{Vsocial{W>
         {Csedit new            {W<{Vsocial{W>
         {Csedit show           {W<{Vsocial{W>
         {Csedit {W<{Ystring-name{W>  <{Vsocial{W> {W[{Gstring{W]{x

{CSEDIT{x allows online creation, deletion and editting of socials.

{CSEDIT DELETE{x <social> deletes that social. The deletion is irrecoverable,
save for restoring a backup file, so use this command with great care!

{CSEDIT NEW <social>{x creates a new, empty social.

{CSEDIT SHOW <social>{x shows all of the strings for that social.

{CSEDIT <string-name> <social> [string]{x changes a certain of the 7 strings that
make up a social. If you leave out the string, no message will be sent to
the involved characters.

There are 7 strings that make up a social:
{Ycnoarg: Sent to character when no argument typed.
onoarg: Sent to others in the room when no argument is given.
cfound: Sent to the character if a target is found.
vfound: Sent to the victim.
ofound: Sent to others in room, if target is found.
cself : Sent to the character if the target is self.
oself : Sent to others in room when a player targets themselves.{x

To get the player names and sexes correct, you need to use those macros:

{c/{GItem      {c/{BFor Char	{c/{PFor Victim
{c|----------------------------------\
{c|{Gname       {B$n           {P$N        {c|
{c|{Ghe/she     {B$e           {P$E        {c|
{c|{Ghim/her    {B$m           {P$M        {c|
{c|{Ghis/hers   {B$s           {P$S{x        {c|
{c|{G(his/her)                         {c|
{c\----------------------------------/

So, to make a new social called 'epoke' which would poke eyes out, you would
do the following:

{WSEDIT NEW epoke
SEDIT cnoarg epoke Poke whose eyes out?
SEDIT onoarg epoke $n looks for a pair of eyes to poke out.
SEDIT cfound epoke You poke $N's eyes out!
SEDIT vfound epoke $n pokes your eyes out! Ouch..
SEDIT ofound epoke $n pokes $N's eyes out!
SEDIT cself  epoke Being bored, you poke your own eyes out.
SEDIT oself  epoke $n pokes $s eyes out!{x

To get more examples, type {GSEDIT SHOW <social-name>{x to see one of the
existing socials.

The socials are stored in a file called socials.txt. Manual editting of
that file is not advised. A frequent back-up is recommended. The social
file is updated by the server as soon as anything changes.  Because of
this code, there is no longer any option for if the player you try to
do the action on is not there.


{cOnline social editting - (c) 1996,97 Erwin S. Andreasen <erwin@pip.dknet.dk>{x
~

100 100 CEDIT~
Syntax:  {Pcedit delete         {W<{Vclan{W>
         {Pcedit new            {W<{Vclan{W>
	 {Pcedit show           {W<{Vclan{W>
	 {Pcedit {W<{Ystring-name{W>  <{Vclan{W> {W[{Gstring{W]{x

The 'new' commands adds a clan to the collection of clans. In order to create
a new clan, you have to provide the clan's name. Choose this name wisely for
it will be the clan's mail name and this name will be used for any clan-
related command. This name can {PNOT{x be altered once created.
All newly created clan start with 100 questpoints.
The 'delete' command on clans can only be used by the IMPLEMENTOR.
The 'show' command displays the specified clan on the screen.

You can edit a clan by specifying the name of the field you want to change
and the new value.

There are 8 values that make up a clan:
{Ywhoname    {x: the name of the clan as it should show in 'who'.
{Yhall       {x: the vnum of the room the 'clanrecall' commands leads to.
{Yareamin    {x: the lower vnum of the area the clanhall is in.
{Yareamax    {x: the upper vnum of the area the clanhall is in.
{Yindependent{x: indicates if it's a loner clan. Always use '0'.
{Yclanqp     {x: the number of questpoints a clan has gathered.
{Yclanname   {x: the fullname of the clan.
{Ycreator    {x: the name(s) of the creator(s) of the clan.{x

The whoname, clanname and creator are strings, the other fields are numerical.
for independent, use 1 for Yes, and 0 for No.
The number specified for clanrecall has to be an existing room in the mud.

{PWARNING: DO NOT CREATE CLANS JUST FOR FUN! THIS WILL BE PUNISHED WITH A
         DEMOTION!{x
~

-2
